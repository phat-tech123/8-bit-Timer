$date
	Fri Jun 13 14:26:26 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ClockSelect_tb $end
$var wire 1 ! CounterEdge1 $end
$var wire 1 " CounterEdge0 $end
$var wire 1 # CounterClock1 $end
$var wire 1 $ CounterClock0 $end
$var reg 1 % TMCI0 $end
$var reg 1 & TMCI1 $end
$var reg 1 ' clk $end
$var reg 3 ( clock_select_0 [2:0] $end
$var reg 3 ) clock_select_1 [2:0] $end
$var reg 1 * edge_select_0 $end
$var reg 1 + edge_select_1 $end
$scope module ClockSelect_u $end
$var wire 1 $ CounterClock0 $end
$var wire 1 # CounterClock1 $end
$var wire 1 " CounterEdge0 $end
$var wire 1 ! CounterEdge1 $end
$var wire 1 % TMCI0 $end
$var wire 1 & TMCI1 $end
$var wire 1 ' clk $end
$var wire 3 , clock_select_0 [2:0] $end
$var wire 3 - clock_select_1 [2:0] $end
$var wire 1 * edge_select_0 $end
$var wire 1 + edge_select_1 $end
$var wire 1 . clk_div8192 $end
$var wire 1 / clk_div8 $end
$var wire 1 0 clk_div64 $end
$var wire 1 1 clk_div32 $end
$var wire 1 2 clk_div2 $end
$var wire 1 3 clk_div1024 $end
$var parameter 32 4 CLK_SELECT_BIT_WIDTH $end
$var reg 1 5 selected_clk_0 $end
$var reg 1 6 selected_clk_1 $end
$scope module div1024 $end
$var wire 1 ' clk_in $end
$var parameter 32 7 DIVISOR $end
$var reg 1 3 clk_out $end
$var reg 28 8 counter [27:0] $end
$upscope $end
$scope module div2 $end
$var wire 1 ' clk_in $end
$var parameter 32 9 DIVISOR $end
$var reg 1 2 clk_out $end
$var reg 28 : counter [27:0] $end
$upscope $end
$scope module div32 $end
$var wire 1 ' clk_in $end
$var parameter 32 ; DIVISOR $end
$var reg 1 1 clk_out $end
$var reg 28 < counter [27:0] $end
$upscope $end
$scope module div64 $end
$var wire 1 ' clk_in $end
$var parameter 32 = DIVISOR $end
$var reg 1 0 clk_out $end
$var reg 28 > counter [27:0] $end
$upscope $end
$scope module div8 $end
$var wire 1 ' clk_in $end
$var parameter 32 ? DIVISOR $end
$var reg 1 / clk_out $end
$var reg 28 @ counter [27:0] $end
$upscope $end
$scope module div8192 $end
$var wire 1 ' clk_in $end
$var parameter 32 A DIVISOR $end
$var reg 1 . clk_out $end
$var reg 28 B counter [27:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000000000000 A
b1000 ?
b1000000 =
b100000 ;
b10 9
b10000000000 7
b11 4
$end
#0
$dumpvars
b0 B
b0 @
b0 >
b0 <
b0 :
b0 8
06
05
03
02
01
00
0/
0.
b111 -
b0 ,
1+
0*
b111 )
b0 (
0'
0&
0%
0$
0#
0"
1!
$end
#5
b1 :
b1 @
b1 <
b1 >
b1 8
b1 B
1'
#10
0'
1%
#15
1$
15
b10 B
b10 8
b10 >
b10 <
b10 @
b0 :
12
1#
16
1'
1&
#20
0'
0%
#25
b1 :
b11 @
b11 <
b11 >
b11 8
b11 B
1'
#30
0#
06
0'
1%
0&
#35
0$
05
b100 B
b100 8
b100 >
b100 <
b100 @
b0 :
02
1'
#40
0'
0%
#45
b1 :
b101 @
b101 <
b101 >
b101 8
b101 B
1#
16
1'
1&
#50
0'
1%
#55
1$
15
b110 B
b110 8
b110 >
b110 <
b110 @
b0 :
12
1'
#60
0#
06
0'
0%
0&
#65
b1 :
b111 @
b111 <
b111 >
b111 8
b111 B
1'
#70
0'
1%
#75
0$
05
b1000 B
b1000 8
b1000 >
b1000 <
b0 @
1/
b0 :
02
1#
16
1'
1&
#80
0'
0%
#85
b1 :
b1 @
b1001 <
b1001 >
b1001 8
b1001 B
1'
#90
0#
06
0'
1%
0&
#95
1$
15
b1010 B
b1010 8
b1010 >
b1010 <
b10 @
b0 :
12
1'
#100
0'
0%
#105
b1 :
b11 @
b1011 <
b1011 >
b1011 8
b1011 B
1#
16
1'
1&
#110
0'
1%
#115
0$
05
b1100 B
b1100 8
b1100 >
b1100 <
b100 @
b0 :
02
1'
#120
0#
06
0'
0%
0&
#125
b1 :
b101 @
b1101 <
b1101 >
b1101 8
b1101 B
1'
#130
0'
1%
#135
1$
15
b1110 B
b1110 8
b1110 >
b1110 <
b110 @
b0 :
12
1#
16
1'
1&
#140
0'
0%
#145
b1 :
b111 @
b1111 <
b1111 >
b1111 8
b1111 B
1'
#150
0#
06
0'
1%
0&
#155
0$
05
b10000 B
b10000 8
b10000 >
b10000 <
b0 @
0/
b0 :
02
1'
#160
0'
0%
#165
b1 :
b1 @
b10001 <
b10001 >
b10001 8
b10001 B
1#
16
1'
1&
#170
0'
1%
#175
1$
15
b10010 B
b10010 8
b10010 >
b10010 <
b10 @
b0 :
12
1'
#180
0#
06
0'
0%
0&
#185
b1 :
b11 @
b10011 <
b10011 >
b10011 8
b10011 B
1'
#190
0'
1%
#195
0$
05
b10100 B
b10100 8
b10100 >
b10100 <
b100 @
b0 :
02
1#
16
1'
1&
#200
0'
0%
